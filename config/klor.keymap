//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include "keys_pt_abnt2.h"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ENGRAM   0
#define NAV      1
#define PROD     2
#define QWERTY   3

&sk {
    quick-release;
    release-after-ms = <1500>;
};

/ {
    behaviors {
        left_hand_hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 29 30 31 32 33 34 35 40 41 42 43 36 37 38 23 11>;
            hold-trigger-on-release;
        };

        cecedilha: cecedilha {
            compatible = "zmk,behavior-mod-morph";
            label = "CECEDILHA";
            bindings = <&kp C>, <&kp PT_C_CEDILLA>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        question_at: question_at {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_AT";
            bindings = <&kp PT_QMARK>, <&kp PT_AT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            bindings = <&kp PT_DOT>, <&kp PT_COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        o_masculine_ordinal: o_masculine_ordinal {
            compatible = "zmk,behavior-mod-morph";
            label = "O_MASCULINE_ORDINAL";
            bindings = <&kp O>, <&kp PT_MASCULINE_ORDINAL_INDICATOR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        control_A_feminine_ordinal: control_A_feminine_ordinal {
            compatible = "zmk,behavior-mod-morph";
            label = "CONTROL_A_FEMININE_ORDINAL";
            bindings =
                <&left_hand_hm LEFT_CONTROL A>,
                <&kp PT_FEMININE_ORDINAL_INDICATOR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            bindings = <&kp PT_COMMA>, <&kp PT_SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        P_percentage: P_percentage {
            compatible = "zmk,behavior-mod-morph";
            label = "P_PERCENTAGE";
            bindings = <&kp P>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        B_Ampersand: B_Ampersand {
            compatible = "zmk,behavior-mod-morph";
            label = "B_AMPERSAND";
            bindings = <&kp B>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        L_pipe: L_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "L_PIPE";
            bindings = <&kp L>, <&kp PIPE2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        U_underscore: U_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "U_UNDERSCORE";
            bindings = <&kp U>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        shift_C_Cecedilha: shift_C_Cecedilha {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_C_CECEDILHA";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&cecedilha>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 29 30 31 32 33 34 35 40 41 42 43>;
            hold-trigger-on-release;
        };

        ultimate_shift: ultimate_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "ULTIMATE_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>, <&kp CAPSLOCK>;

            tapping-term-ms = <180>;
        };

        H_hashtag: H_hashtag {
            compatible = "zmk,behavior-mod-morph";
            label = "H_HASHTAG";
            bindings = <&kp H>, <&kp PT_HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        S_dollar: S_dollar {
            compatible = "zmk,behavior-mod-morph";
            label = "S_DOLLAR";
            bindings = <&kp S>, <&kp PT_DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        to_layers: to_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_LAYERS";
            #binding-cells = <0>;
            bindings = <&to 1>, <&to 2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Esc_one_handed {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            require-prior-idle-ms = <150>;
        };

        enter_one_handed {
            bindings = <&kp ENTER>;
            key-positions = <26 25>;
            require-prior-idle-ms = <150>;
        };

        to_layer1 {
            bindings = <&to 1>;
            key-positions = <37 43>;
        };

        to_layer2 {
            bindings = <&to 2>;
            key-positions = <43 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        Base {
            bindings = <
        &B_Ampersand                     &kp Y                     &o_masculine_ordinal          &U_underscore                &kp PT_APOSTROPHE                           &question_at  &L_pipe          &kp D      &kp W      &kp J
&trans  &shift_C_Cecedilha LEFT_SHIFT 0  &left_hand_hm LEFT_ALT I  &left_hand_hm LEFT_COMMAND E  &control_A_feminine_ordinal  &comma_semi                                 &dot_colon    &H_hashtag       &kp T      &S_dollar  &kp N          &trans
&trans  &kp V                            &kp X                     &kp G                         &kp K                        &kp Z              &kp C_PLAY  &kp C_PAUSE  &kp Q         &kp R            &kp M      &kp F      &P_percentage  &trans
                                                                   &backspace_delete             &lt 1 SPACE                  &lt 2 TAB          &trans      &trans       &kp ENTER     &ultimate_shift  &lt 3 ESC
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV>;
            label = "Base";
        };

        Navigation {
            bindings = <
        &kp F2     &kp LG(F)  &kp LG(LS(L))  &kp LA(PT_PERIOD)  &kp LA(PT_N4)                  &trans       &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP
&trans  &trans     &trans     &trans         &trans             &kp LA(PT_N3)                  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN  &trans
&trans  &kp LG(R)  &kp LG(N)  &kp LG(T)      &kp LG(W)          &kp LG(Q)      &trans  &trans  &key_repeat  &mkp LCLK       &mkp RCLK       &mkp MCLK        &trans         &trans
                              &trans         &trans             &trans         &trans  &trans  &trans       &trans          &to 0
            >;

            label = "Navigation";
        };

        Math {
            bindings = <
        &kp PT_LEFT_BRACKET               &kp PT_RIGHT_BRACKET             &kp PT_LEFT_PARENTHESIS              &kp PT_RIGHT_PARENTHESIS                &kp PT_EXCL                       &trans           &kp PT_ACUTE     &kp PT_TILDE     &kp PT_CARET     &kp PT_GRAVE
&trans  &left_hand_hm LEFT_SHIFT PT_PLUS  &left_hand_hm LEFT_ALT PT_MINUS  &left_hand_hm LEFT_COMMAND PT_EQUAL  &left_hand_hm LEFT_CONTROL PT_ASTERISK  &kp PT_SLASH                      &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &trans
&trans  &kp PT_LEFT_BRACE                 &kp PT_RIGHT_BRACE               &kp PT_LESS_THAN                     &kp PT_GREATER_THAN                     &kp PT_BACKSLASH  &trans  &trans  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans
                                                                           &trans                               &trans                                  &trans            &trans  &trans  &trans           &trans           &to 0
            >;

            label = "Math";
        };

        RGB {
            label = "RGB";
            bindings = <
        &trans  &trans  &trans  &trans  &trans                  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI
&trans  &trans  &trans  &trans  &trans  &trans                  &trans           &bt BT_NXT       &bt BT_PRV       &bt BT_CLR       &bt BT_CLR_ALL   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans           &trans           &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
